// Hatchak keyboard layout
// It' largely taken from Programmer's Dvorak, but
// has more convenient modifier keys.
// Control is in a prominent place on the left and right (capsLock and quote),
// as are Level3_Shift keys (tab and leftBracket).
// Various symbols have been put into level3 shift, as
// well as convenient arrow keys, end, home, and pageup/down.


// TODO
// I have put all sorts of symbols in L3/L4, but I may want to put in some unicode
// ones later... mostly for math symbols.  Although I really don't know when I would
// use them.
//
// I may put a keypad on gcr, htn, mwv, in L5 (sending the keypad versions for
// programs that can tell the difference).
//
// Also, I should clean up this file and align things...

xkb_symbols "hatchak" {

    name[Group1]= "Hatchak-g1";


// Modifier Keys
    key.type = "ONE_LEVEL";
    key <LFSH>  { [ Shift_L   ] };
    key <RTSH>  { [ Shift_R   ] };
    key <CAPS>  { [ Control_L ] };
    // Note, that the right control is the quote key
    key <AC11>  { [ Control_R ] };
    key <LCTL>  { [ Alt_L     ] };
    key <RCTL>  { [ Alt_R     ] };
    key <LALT>  { [ Super_L   ] };
    key <RALT>  { [ Super_R   ] };
    key <LWIN>  { [ Hyper_L   ] };
    key <RWIN>  { [ Hyper_R   ] };
    key <AD11>  { [ ISO_Level3_Shift ] };
    key <TAB>   { [ ISO_Level3_Shift ] };
//    key <TLDE>  { [ ISO_Level5_Shift ] };
//    key <BKSL>  { [ ISO_Level5_Shift ] };
    // Menu can be caps lock for now, until I can get it into L3 shift
    // without having it toggle always...
    key <MENU>  { [ Caps_Lock ] };


    modifier_map Shift { Shift_L, Shift_R };
    modifier_map Control { Control_L, Control_R };
    modifier_map Lock { Caps_Lock };
    modifier_map Mod1 { Alt_L, Alt_R };
    modifier_map Mod3 { ISO_Level3_Shift };
    modifier_map Mod5 { ISO_Level5_Shift };
    modifier_map Mod4 { Super_L, Super_R };
    modifier_map Mod2 { Hyper_L, Hyper_R };


// Other one level keys
    key.type = "ONE_LEVEL";
    key <ESC>   { [ Escape ] };
    key <RTRN>  { [ Return ] };

// Two level keys
    key.type = "TWO_LEVEL";
    key <BKSP>  { [ BackSpace, Delete ] };

// Normal keys
    key.type = "EIGHT_LEVEL";
    key <SPCE> { [ space, space, Tab, ISO_Left_Tab ] };
    // Number Row
    // I'm reserving the tilde key for another modifier
    //key <TLDE> { [ grave, asciitilde ] };
    key <AE01> { [ equal, asciitilde, notequal, approxeq ] };
    key <AE02> { [ braceleft, 7, guillemotleft ] };
    key <AE03> { [ braceright, 5, guillemotright ] };
    key <AE04> { [ dollar, 3, cent, EuroSign ] };
    key <AE05> { [ semicolon, 1, sterling, yen ] };
    key <AE06> { [ colon, 9, copyright ] };
    key <AE07> { [ numbersign, 0, degree, infinity ] };
    key <AE08> { [ slash, 2, division ] };
    key <AE09> { [ parenleft, 4, ellipsis ] };
    key <AE10> { [ parenright, 6, paragraph, section ] };
    key <AE11> { [ asterisk, 8, enfilledcircbullet, multiply ] };
    key <AE12> { [ plus, percent, plusminus ] };

    // Upper Row
    key <AD01> { [ minus, underscore, bar ] };
    key <AD02> { [ comma, less, question, questiondown ] };
    key <AD03> { [ period, greater, exclam, exclamdown ] };
    key <AD04> { [ p, P, ampersand, trademark ], [ Greek_pi, Greek_PI ] };
    key <AD05> { [ y, Y, asciicircum, registered ], [ Greek_upsilon, Greek_UPSILON ] };
    key <AD06> { [ f, F ], [ Greek_phi, Greek_PHI ] };
    key <AD07> { [ g, G, ISO_Group_Latch ], [ Greek_gamma, Greek_GAMMA ] };
    key <AD08> { [ c, C, Multi_key ], [ Greek_xi, Greek_XI ] };
    key <AD09> { [ r, R, dead_grave ], [ Greek_rho, Greek_RHO ] };
    key <AD10> { [ l, L ], [ Greek_lamda, Greek_LAMDA ] };
    // Note AD11 is a modifier key
    key <AD12> { [ Tab, ISO_Left_Tab ] }; // TODO - add caps lock here
    // I'm reserving backslash for another modifier

    // Home Row
    key <AC01> { [ a, A, at ], [ Greek_alpha, Greek_ALPHA ] };
    key <AC02> { [ o, O, bracketleft ], [ Greek_omicron, Greek_OMICRON ] };
    key <AC03> { [ e, E, bracketright ], [ Greek_epsilon, Greek_EPSILON ] };
    key <AC04> { [ u, U, backslash ], [ Greek_omega, Greek_OMEGA ] };
    key <AC05> { [ i, I ], [ Greek_iota, Greek_IOTA ] };
    key <AC06> { [ d, D, Left, leftarrow ], [ Greek_delta, Greek_DELTA ] };
    key <AC07> { [ h, H, Down, downarrow ], [ Greek_theta, Greek_THETA ] };
    key <AC08> { [ t, T, Up, uparrow ], [ Greek_tau, Greek_TAU ] };
    key <AC09> { [ n, N, Right, rightarrow ], [ Greek_nu, Greek_NU ] };
    key <AC10> { [ s, S, Prior ], [ Greek_sigma, Greek_SIGMA ] }; // Prior is pageup
    // Note the lack of AC11 - it's a mod key now

    // Lower Row
    key <AB01> { [ apostrophe, quotedbl, grave ] };
    key <AB02> { [ q, Q ], [ Greek_psi, Greek_PSI ] };
    key <AB03> { [ j, J, Escape ], [ Greek_eta, Greek_ETA ] };
    key <AB04> { [ k, K ], [ Greek_kappa, Greek_KAPPA ] };
    key <AB05> { [ x, X ], [ Greek_chi, Greek_CHI ] };
    key <AB06> { [ b, B ], [ Greek_beta, Greek_BETA ] };
    key <AB07> { [ m, M, Insert ], [ Greek_mu, Greek_MU ] };
    key <AB08> { [ w, W, Home ], [] };
    key <AB09> { [ v, V, End ], [] };
    key <AB10> { [ z, Z, Next ], [ Greek_zeta, Greek_ZETA ] }; // Next is pagedown


// I've put the numbers as the base of the number pad
// But maybe I'll later want things like KP_Home, KP_Next, etc...

    // TODO - find a use for this.  I don't want numlock on my layout.  I've always disliked it.
    //key <NMLK> { [ Num_Lock, Num_Lock, Num_Lock, Num_Lock, Num_Lock  ] };
    key <KPDV> { [ KP_Divide ] };
    key <KPMU> { [ KP_Multiply, asciicircum ] };
    key <KPSU> { [ KP_Subtract, BackSpace ] };

    key <KP7>  { [ KP_7 ] };
    key <KP8>  { [ KP_8 ] };
    key <KP9>  { [ KP_9 ] };
    key <KPAD> { [ KP_Add ] };

    // Add some handy parens and E for using calculators
    key <KP4>  { [ KP_4, parenleft ] };
    key <KP5>  { [ KP_5, parenright ] };
    key <KP6>  { [ KP_6, E ] };

    key <KP1>  { [ KP_1 ] };
    key <KP2>  { [ KP_2 ] };
    key <KP3>  { [ KP_3 ] };
   
    key <KP0>  { [ KP_0, space ] };
    key <KPDL> { [ KP_Decimal ] };

    key <KPEN> { [ KP_Enter ] };



// Here are some of the keys outside of the main block... I don't know what
// I want to do with them yet.



    // The extra key on many European keyboards:
    //key <LSGT> { [ less, greater, bar, brokenbar ] };


    key <OUTP> { [ XF86Display ] };
    key <KITG> { [ XF86KbdLightOnOff ] };
    key <KIDN> { [ XF86KbdBrightnessDown ] };
    key <KIUP> { [ XF86KbdBrightnessUp ] };



    key <PRSC> {
       type= "PC_ALT_LEVEL2",
       symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> { [  Scroll_Lock ] };
    key <PAUS> {
       type= "PC_CONTROL_LEVEL2",
       symbols[Group1]= [ Pause, Break ]
    };
    key <INS>  { [  Insert  ] };
    key <HOME> { [  Home    ] };
    key <PGUP> { [  Prior   ] };
    key <DELE> { [  Delete  ] };
    key <END>  { [  End     ] };
    key <PGDN> { [  Next    ] };

    key <UP>   { [  Up      ] };
    key <LEFT> { [  Left    ] };
    key <DOWN> { [  Down    ] };
    key <RGHT> { [  Right   ] };


// Function Keys, taken from srvr_ctrl, but modified to use super and alt
// for VT switching - so they're on the same keys as other VTs in qwerty.
    key <FK01> {
       type="SUPER_ALT",
       symbols[Group1]= [ F1, F1, F1, F1, XF86_Switch_VT_1 ]
    };

    key <FK02> {
       type="SUPER_ALT",
       symbols[Group1]= [ F2, F2, F2, F2, XF86_Switch_VT_2 ]
    };

    key <FK03> {
       type="SUPER_ALT",
       symbols[Group1]= [ F3, F3, F3, F3, XF86_Switch_VT_3 ]
    };

    key <FK04> {
       type="SUPER_ALT",
       symbols[Group1]= [ F4, F4, F4, F4, XF86_Switch_VT_4 ]
    };

    key <FK05> {
       type="SUPER_ALT",
       symbols[Group1]= [ F5, F5, F5, F5, XF86_Switch_VT_5 ]
    };

    key <FK06> {
       type="SUPER_ALT",
       symbols[Group1]= [ F6, F6, F6, F6, XF86_Switch_VT_6 ]
    };

    key <FK07> {
       type="SUPER_ALT",
       symbols[Group1]= [ F7, F7, F7, F7, XF86_Switch_VT_7 ]
    };

    key <FK08> {
       type="SUPER_ALT",
       symbols[Group1]= [ F8, F8, F8, F8, XF86_Switch_VT_8 ]
    };

    key <FK09> {
       type="SUPER_ALT",
       symbols[Group1]= [ F9, F9, F9, F9, XF86_Switch_VT_9 ]
    };

    key <FK10> {
       type="SUPER_ALT",
       symbols[Group1]= [ F10, F10, F10, F10, XF86_Switch_VT_10 ]
    };

    key <FK11> {
       type="SUPER_ALT",
       symbols[Group1]= [ F11, F11, F11, F11, XF86_Switch_VT_11 ]
    };

    key <FK12> {
       type="SUPER_ALT",
       symbols[Group1]= [ F12, F12, F12, F12, XF86_Switch_VT_12 ]
    };

};


