// Hatchak keyboard layout
// It' largely taken from Programmer's Dvorak, but
// has more convenient modifier keys.
// Control is in a prominent place on the left and right (capsLock and quote),
// as are Level3_Shift keys (tab and leftBracket).
// Various symbols have been put into level3 shift, as
// well as convenient arrow keys, end, home, and pageup/down.

xkb_symbols "hatchak" {

    name[Group1]= "Hatchak-g1";


// Modifier Keys
    key.type = "ONE_LEVEL";
    key <LFSH>  {   [ Shift_L   ]   };
    key <RTSH>  {   [ Shift_R   ]   };
    key <CAPS>  {   [ Control_L ]   };
    // Note, that the right control is the quote key
    key <AC11>  {   [ Control_R ]   };
    key <LCTL>  {   [ Alt_L     ]   };
    key <RCTL>  {   [ Alt_R     ]   };
    // I'll reserve the original alt keys for other modifiers
    //key <LALT>  {   [ Alt_L     ]   };
    //key <RALT>  {   [ Alt_R     ]   };
    key <LWIN>  {   [ Super_L   ]   };
    key <RWIN>  {   [ Super_R   ]   };
    key <AD11>  {   [ ISO_Level3_Shift ] };
    key <TAB>   {   [ ISO_Level3_Shift ] };
//    key <TLDE>  {   [ ISO_Level5_Shift ] };
//    key <BKSL>  {   [ ISO_Level5_Shift ] };

    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Control { Control_L, Control_R };
    modifier_map Mod1   { Alt_L, Alt_R };
    //modifier_map Meta   { Alt_L, Alt_R };
    modifier_map Mod4   { Super_L, Super_R };
    //modifier_map Super  { Super_L, Super_R };
    modifier_map Mod2 { ISO_Level3_Shift };
    modifier_map Mod5 { ISO_Level5_Shift };
    modifier_map Lock { Caps_Lock };


// Other one level keys
    key.type = "ONE_LEVEL";
    key <ESC>   {   [ Escape ]  };
    key <RTRN>  {   [ Return ]  };
    //key <DELE>  {   [ Delete ] };

// Two level keys
    key.type = "TWO_LEVEL";
    key <BKSP>  {   [ BackSpace, Delete ] };

// Normal keys
    key.type = "EIGHT_LEVEL";
    key <SPCE> { [  space, space, Tab, ISO_Left_Tab ] };
    // Number Row
    // I'm reserving the tilde key for another modifier
    //key <TLDE> { [  grave,    asciitilde      ] };
    key <AE01> { [  semicolon, colon ] };
    key <AE02> { [  braceleft, 7 ] };
    key <AE03> { [  braceright, 5 ] };
    key <AE04> { [  dollar, 3 ] };
    key <AE05> { [  plus, 1 ] };
    key <AE06> { [  equal, 9 ] };
    key <AE07> { [  asciitilde, 0 ] };
    key <AE08> { [  exclam, 2 ] };
    key <AE09> { [  less, 4 ] };
    key <AE10> { [  greater, 6 ] };
    key <AE11> { [  asterisk, 8 ] };
    key <AE12> { [  numbersign, percent ] };

    // Upper Row
    key <AD01> { [  minus, underscore, bar ] };
    key <AD02> { [  comma, parenleft, bracketleft ] };
    key <AD03> { [  period, parenright, bracketright ] };
    key <AD04> { [  p, P, at ] };
    key <AD05> { [  y, Y, asciicircum ] };
    key <AD06> { [  f, F ] };
    // Todo - add greek to G
    key <AD07> { [  g, G ] };
    key <AD08> { [  c, C ] };
    key <AD09> { [  r, R ] };
    key <AD10> { [  l, L ] };
    // Note AD11 is a modifier key
    key <AD12> { [ ampersand, Caps_Lock, Multi_key      ] };
    // I'm reserving backslash for another modifier

    // Home Row
    key <AC01> { [  a, A, slash ] };
    key <AC02> { [  o, O, question ] };
    key <AC03> { [  e, E, backslash ] };
    key <AC04> { [  u, U ] };
    key <AC05> { [  i, I ] };
    key <AC06> { [  d, D, Left ] };
    key <AC07> { [  h, H, Down ] };
    key <AC08> { [  t, T, Up ] };
    key <AC09> { [  n, N, Right ] };
    key <AC10> { [  s, S, Prior ] }; // Prior is pageup
    // Note the lack of AC11 - it's a mod key now

    // Lower Row
    key <AB01> { [  apostrophe, quotedbl, grave ] };
    key <AB02> { [  q, Q ] };
    key <AB03> { [  j, J ] };
    key <AB04> { [  k, K ] };
    key <AB05> { [  x, X ] };
    key <AB06> { [  b, B ] };
    key <AB07> { [  m, M, Insert ] };
    key <AB08> { [  w, W, Home ] };
    key <AB09> { [  v, V, End ] };
    key <AB10> { [  z, Z, Next ] }; // Next is pagedown

// I've put the numbers as the base of the number pad
// But maybe I'll later want things like KP_Home, KP_Next, etc...

    key <KP7>  { [ KP_7 ] };
    key <KP8>  { [ KP_8 ] };
    key <KP9>  { [ KP_9 ] };
    key <KPMU> { [ KP_Multiply ] };

    key <KP4>  { [ KP_4 ] };
    key <KP5>  { [ KP_5 ] };
    key <KP6>  { [ KP_6 ] };
    key <KPSU> { [ KP_Subtract ] };

    key <KP2>  { [ KP_2 ] };
    key <KP3>  { [ KP_3 ] };
    key <KPAD> { [ KP_Add ] };
   
    key <KP0>  { [ KP_0 ] };
    key <KPDL> { [ KP_Decimal ] };
    key <KPDV> { [ KP_Divide ] };



// Here are some of the keys outside of the main block... I don't know what
// I want to do with them yet.



    // The extra key on many European keyboards:
    //key <LSGT> {	[ less, greater, bar, brokenbar ] };



    key <NMLK> {	[ Num_Lock 		]	};
    modifier_map Mod2   { Num_Lock };

    // Fake keys for virtual<->real modifiers mapping:
    //key <LVL3> {	[ ISO_Level3_Shift	]	};
    //key <MDSW> {	[ Mode_switch 		]	};
    //modifier_map Mod5   { <LVL3>, <MDSW> };


    key <OUTP> { [ XF86Display ] };
    key <KITG> { [ XF86KbdLightOnOff ] };
    key <KIDN> { [ XF86KbdBrightnessDown ] };
    key <KIUP> { [ XF86KbdBrightnessUp ] };



    key <PRSC> {
	type= "PC_ALT_LEVEL2",
	symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> {	[  Scroll_Lock		]	};
    key <PAUS> {
	type= "PC_CONTROL_LEVEL2",
	symbols[Group1]= [ Pause, Break ]
    };
    key  <INS> {	[  Insert		]	};
    key <HOME> {	[  Home			]	};
    key <PGUP> {	[  Prior		]	};
    key <DELE> {	[  Delete		]	};
    key  <END> {	[  End			]	};
    key <PGDN> {	[  Next			]	};

    key   <UP> {	[  Up			]	};
    key <LEFT> {	[  Left			]	};
    key <DOWN> {	[  Down			]	};
    key <RGHT> {	[  Right		]	};


};

